Welcome to Vmetro's FusionIPC (VFI) Distributed DMA Driver!

Actually, its a collection of drivers. The main driver is hardware
independent and manifests a char device interface to userspace and a
plugin interface to two types of backend driver which are hardware
specific: the DMA Engine drivers and the Fabric drivers.

If the system on which this is running has more than one interface
capable of supporting the VFI Fabric interface then more than one
fabric driver will "plugin" to the main driver.

If more than one DMA engine is available capable of supporting the VFI
DMA interface then more than one DMA engine driver will plugin to the
main driver.

It is possible for the system to work without a DMA engine. It is
unlikely to be a useful system without at least one Fabric interface.

The directory in which you found this file was likely obtained in one
of two official ways:

1. As a tarball
2. As a checkout from a CVS or GIT server.

The software contained herein can be built against a kernel in two
ways:
a) as an out of tree set of modules, using makefile variables, or
b) in tree using Kconfig.

When built in tree, the code may still be built as modules or as
built-in to the kernel by config choice.

When configured as modules, either out of tree or in-tree, module
loading can be configured to occur automatically at run-time,
depmod(8) or can be manually controlled with insmod(8) or modprobe(8).

When one of the vfi_fabric_*.ko modules or vfi_dma_*.ko modules is
loaded manually or via hotplug modprobe(8) will use the module
dependencies to automatically load the main driver vfi.ko

A shell script, Kinstall, is supplied in this directory which is used
to install, either by copying or symlinking, the various files in this
directory into the kernel tree against which the software is to be
built.

To build out of tree modules one need only use Kinstall to install the
include files. One then invokes make and the Makefile will build
against the kernel in use, as determined by uname(1) or that provided
by setting KERNELDIR

	make KERNELDIR=... modules

For simplicity, when installing the software for an in-tree build, all
of the drivers are installed in drivers under a single vfi
directory. In reality, were the software ever to be accepted into the
mainline kernel, the drivers would be split, along with their Kconfig
menus amongst the architecture specific files and drivers and the main
generic driver. The software can be installed by copying into the
kernel or by symlinking. Once installed you can cd to your kernel
directory and perform the various make invocatons from there

	make xconfig
	make
	make modules
	make modules_install

etc.

This directory and its utilities make no assumptions about the
required dependencies and patches of the kernel. Other utilities,
software or project management is required to ensure these
pre-requisites are met.

Unless you are a VFI developer you are unlikely to see either this
file or the directory containing it. Instead you will have received an
already patched kernel source wherein all of these source files,
Kbuild and Kconfig files will have been included.
