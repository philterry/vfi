#!/bin/bash

# Copyright 2007 MicroMemory, LLC.
# Phil Terry <pterry@micromemory.com>

# This program is free software; you can redistribute  it and/or modify it
# under  the terms of  the GNU General  Public License as published by the
# Free Software Foundation;  either version 2 of the  License, or (at your
# option) any later version.

if [ -f ~/.umemrddmarc ]; then
    . ~/.umemrddmarc
fi
function help () 
{

cat<<EOF
This script can install or uninstall this rddma system:
	$(pwd)
in your kernel:
	${kernelsrc:=/lib/modules/`uname -r`/build}

which should be a softlink:
$(ls -ld $kernelsrc)

Install (-i) copies the source files into the thee so that we can do
a kernel build.

Symlink (-s) just symlinks the include files into the kernel tree so
that the out of tree module build will work. This is a subset of 
Install.

Uninstall (-u) undoes either/both of the above.

Force (-f) forces install/uninstall to remove .orig backups.

Help (-h) Erm...

Verbose (-v) A longer version of Erm...
EOF
}


while getopts :viuscfh OPT; do
    case $OPT in
	v|+v)
	    V=-v
	    ;;
	i|+i)
	doInstall=Install
	dowhat=Install
	;;
	u|+u)
	doUninstall=Uninstall
	dowhat=Uninstall
	;;
	s|+s)
	doSymlink=Symlink
	dowhat=Symlink
	;;
	c|+c)
	doCopyleft=Copyleft
	dowhat=Copyleft
	;;
	f|+f)
	doforce=$OPT
	;;
	h|+h)
	help
	exit 0
	;;
	*)
	    echo "usage: ${0##*/} [+-v} [--] ARGS..."
	    exit 2
    esac
done
shift $[ OPTIND - 1 ]




if [ -z "$dowhat" ] ; then
    echo "What do you want to do?"
    select dowhat in "Install" "Uninstall" "Symlink" "Cancel" "Help"; do
	case x$dowhat in
	    x)
	    help
	    ;;
	    xInstall)
	    doInstall=Install
	    break
	    ;;
	    xUninstall)
	    doUninstall=Uninstall
	    break
	    ;;
	    xSymlink)
	    doSymlink=Symlink
	    break
	    ;;
	    xCancel)
	    echo -n "Timewaster! Then I guess we are all "
	    break
	    ;;
	    *)
	    help
	    ;;
	esac
    done
fi

if [ -n "$doInstall" ] ; then
    if [  -L ${kernelsrc:=/lib/modules/`uname -r`/build}/drivers/rddma ]; then
	echo $kernelsrc/drivers/rddma is currently a symbolic link
	echo "	" $(ls -l -d $kernelsrc/drivers/rddma)
	echo replacing with a directory.
	rm $kernelsrc/drivers/rddma
    fi

    if [ -d $kernelsrc/drivers/rddma ]; then
	if [ -n "$V" ] ; then
	    echo $kernelsrc/drivers/rddma is currently a directory containing:
	    echo ls -lR $kernelsrc/drivers/rddma
	    ls -lR $kernelsrc/drivers/rddma
	fi
	if [ -d $kernelsrc/drivers/rddma.orig ]; then
	    if [ -z "$doforce" ]; then
		echo "Can't save existing directory $kernelsrc/drivers/rddma becuase rddma.orig exists"
		echo "What do you want to do with rddma.orig?"
		select action in "Replace" "Cancel"; do
		    case x$action in
			x)
			echo "Don't understand $REPLY"
			;;
			xReplace)
			echo "Replacing"
			rm -rf $kernelsrc/drivers/rddma.orig
			break
			;;
			xCancel)
			exit 0
			break;
			;;
			*)
			echo Huh bug report to phil
			exit -128
			;;
		    esac
		done
	    else
		rm -rf $kernelsrc/drivers/rddma.orig
	    fi
	fi
	if [ -n "$V" ] ; then
	    echo Saving existing rddma directory as follows:
	fi
	mv $V $kernelsrc/drivers/rddma $kernelsrc/drivers/rddma.orig
    fi

    mkdir $kernelsrc/drivers/rddma
    echo Populating $kernelsrc/drivers/rddma
    cp *.c Kbuild $kernelsrc/drivers/rddma

    echo Populating $kernelsrc/Documentation/DocBook
    cp $V --backup=numbered DocBook/rddma.tmpl $kernelsrc/Documentation/DocBook

fi

if [ -n "$doInstall" -o -n "$doSymlink" ] ; then
    echo Populating ${kernelsrc:=/lib/modules/`uname -r`/build}/include/linux
    for file in *.h ; do
	if [ -L $kernelsrc/include/linux/$file ] ; then
	    if [ -n "$V" ]; then
		echo removing symlink for $file
		ls -l $kernelsrc/include/linux/$file
	    fi
	    rm $kernelsrc/include/linux/$file
	fi
	if [ -n "$doSymlink" ]; then
	    ln -s $(pwd)/$file $kernelsrc/include/linux/$file
	else
	    cp $V --backup=numbered $file $kernelsrc/include/linux
	fi
    done
fi

if [ -n "$doUninstall" ] ; then
    if [ -L ${kernelsrc:=/lib/modules/`uname -r`/build}/drivers/rddma ] ; then
	rm $kernelsrc/drivers/rddma 
    else
	rm -rf $kernelsrc/drivers/rddma
    fi

    rm $kernelsrc/include/linux/rddma*
    rm $kernelsrc/Documentation/DocBook/rddma.tmpl

    if [ -n "$doforce" ]; then
	rm -rf $kernelsrc/drivers/rddma.orig
    fi
fi

if [ -n "$doCopyleft" ] ; then

for file in *.[ch] ; do
    grep -q Copyright $file
    if [ $? -ne 0 ] ; then
    sed -i -e "1i\
/* \\
 * \\
 * Copyright 2007 MicroMemory, LLC. \\
 * ${name:-Phil Terry} <${email:-pterry}@micromemory.com> \\
 * \\
 * This program is free software; you can redistribute  it and/or modify it\\
 * under  the terms of  the GNU General  Public License as published by the\\
 * Free Software Foundation;  either version 2 of the  License, or (at your\\
 * option) any later version.\\
 */\\
" $file
fi
done
fi
echo Done
